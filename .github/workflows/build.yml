name: build and publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v5

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
      
      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NuGetAPIKey }}
          nuget-version: '5.x'
      
      - run: cd $GITHUB_WORKSPACE

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Change package version
        run: |
          python -c "import urllib.request; urllib.request.urlretrieve('https://raw.githubusercontent.com/il-katta/jenkins-libs/master/resources/it/loopback/jenkins/projedit.py', 'projedit.py')"
          foreach ($file in (Get-ChildItem ./*.csproj) ) { 
            $version = python projedit.py netstandard $file
            Write-Output "New project version: $version"
            Write-Output "PROJECT_VERSION=$version" >> $env:GITHUB_OUTPUT
          }
        id: project_version

      - name: Restore packages
        run: nuget restore ACUtils.AXRepository.sln
      
      - name: Build
        run: |
          msbuild.exe ACUtils.AXRepository.sln /p:Configuration="Release" /p:Platform="Any CPU" /t:"Restore"
          msbuild.exe ACUtils.AXRepository.sln /p:Configuration="Release" /p:Platform="Any CPU" /t:"Rebuild"

      - name: Commit deploy
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ./*.csproj
          git commit -m "deploy"
          git push

      - name: Archive Nuget packages
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: |
            dist/*.nupkg
            dist/*.snupkg
      
      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "${{ steps.project_version.outputs.PROJECT_VERSION }}"
          files: |
            dist/*.nupkg
            dist/*.snupkg


      - name: Publish ( nuget )
        run: |
          foreach ($file in (Get-ChildItem dist/*.nupkg) ) { 
            nuget push $file -Source https://api.nuget.org/v3/index.json -SkipDuplicate
          }
      
      - name: Publish ( github )
        run: |
          dotnet nuget add source --username il-katta --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/il-katta/index.json"
          foreach ($file in (Get-ChildItem dist/*.nupkg) ) { 
            dotnet nuget push $file --source "https://nuget.pkg.github.com/il-katta/index.json" --skip-duplicate
          }

      
      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NuGetAPIKey }}
          nuget-version: '5.x'
